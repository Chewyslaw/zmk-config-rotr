#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>

&inc_dec_kp {
	triggers-per-rotation = <24>;
};
&def_lshft {
	triggers-per-rotation = <8>;
};

/ {
	macros {
		capture_prev_30s: capture_prev_30s {
		label = "Game_bar_capture_prev_30s";
		compatible = "zmk,behavior-macro";
		#binding-cells = <0>;
		bindings
			= <&macro_press &kp LEFT_WIN>
			, <&macro_press &kp LEFT_ALT>
			, <&macro_press &kp G>
			, <&macro_wait_time 500>
			, <&macro_release &kp LEFT_WIN>
			, <&macro_release &kp LEFT_ALT>
			, <&macro_release &kp G>
			;
		};
	};
};

/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
			// Red: MUTE | WIN+ALT+G | PLAY/PAUSE
			bindings = <&kp C_MUTE &lt 4 &capture_prev_30s &kp C_PP>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};
		one {
			// Yellow: PREV | PLAY/PAUSE | NEXT
			bindings = <&kp C_PREV &lt 4 C_PP &kp C_NEXT>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		    	ledoverride; // Default Green
            		r = <255>;
            		g = <255>;
            		b = <0>;
		};
		two {
			// Green: MUTE | PLAY/PAUSE | NEXT
			bindings = <&kp C_MUTE &lt 4 C_PP &kp C_NEXT>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
			ledoverride; // Default Blue
            		r = <0>;
            		g = <255>;
            		b = <0>;
		};
		three {
			// Blue: LEFT ARROW | SPACE BAR | RIGHT ARROW
			bindings = <&kp LEFT &lt 4 SPACE &kp RIGHT>; 
   	  		sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
			ledoverride;  // Default Yellow
            		r = <0>;
            		g = <0>;
            		b = <255>;
		};
		shift {
			// Layers: Hold MIDDLE & SPIN to cycle layers
			bindings = <&bt BT_CLR &trans &rgb_ug RGB_TOG>;
			sensor-bindings = <&def_lshft>;
		};
	};
};
