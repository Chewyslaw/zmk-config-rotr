#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>

&inc_dec_kp {
	triggers-per-rotation = <36>;
};
&def_lshft {
	triggers-per-rotation = <6>;
};

/ {
	macros {
		// WIN+ALT+G
		game_cap: game_cap {
			label = "Xbox_game_bar_capture_previous_30s";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings 
				= <&macro_press &kp LEFT_WIN>
				, <&macro_press &kp LEFT_ALT>
				, <&macro_press &kp G>
				, <&macro_release &kp G>
				, <&macro_release &kp LEFT_ALT>
				, <&macro_release &kp LEFT_WIN>
				;
		};
	};
};

/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
			// Red: PLAY/PAUSE | MUTE | GAMEPLAY CAPTURE
			bindings = <&kp C_PP &lt 4 C_MUTE &kp &game_cap>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};
		one {
			// Yellow: PLAY/PAUSE | MUTE | NEXT
			bindings = <&kp C_PP &lt 4 C_MUTE &kp C_NEXT>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		    	ledoverride; // Default Green
            		r = <255>;
            		g = <255>;
            		b = <0>;
		};
		two {
			// Green: PLAY/PAUSE | PREV | NEXT
			bindings = <&kp C_PP &lt 4 C_PREV &kp C_NEXT>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
			ledoverride; // Default Blue
            		r = <0>;
            		g = <255>;
            		b = <0>;
		};
		three {
			// Purple: LEFT ARROW | SPACE BAR | RIGHT ARROW
			bindings = <&kp LEFT &lt 4 SPACE &kp RIGHT>; 
   	  		sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
			ledoverride;  // Default Yellow
            		r = <128>;
            		g = <0>;
            		b = <128>;
		};
		shift {
			// Layers: Hold MIDDLE & SPIN to cycle layers
			bindings = <&bt BT_CLR &trans &rgb_ug RGB_TOG>;
			sensor-bindings = <&def_lshft>;
		};
	};
};
